import { createApp } from 'vue'
import RunningApp from './RunningApp.vue'
import './assets/main.css'
import Paginate from "vuejs-paginate-next";
import { createRouter, createWebHistory } from 'vue-router';
import RaceImages from './components/RaceImages.vue';
import HomePage from './components/HomePage.vue';
import veProgress from "vue-ellipse-progress";

// params are ignored if path present
// https://stackoverflow.com/questions/40382388/how-to-set-url-query-params-in-vue-with-vue-router
const routes = [
    { path: '/', component: HomePage, name:'homepage'},
    { path: '/races/:raceid/:racealias', component: RaceImages, name:'racedetails'}
  ];

const router = createRouter({
    history: createWebHistory(),
    routes
  })
const app = createApp(RunningApp).use(Paginate)
                                 .use(veProgress)
                                 .use(router)
                                 .mount('#app')


const scripts = document.getElementsByTagName('script');
let raceid = 0;
for(var i=0;i < scripts.length;i++){
    if (scripts[i].getAttribute('raceid') != null){
        raceid = parseInt(scripts[i].getAttribute('raceid'));
        break;
    }
}
                                                   
// load from an embeded js so that we can extract raceid
// if GUI is generated by embeded script, so raceid is in query so that when you paste the the link on fb and share it with peopel
// then, people can use the link to access the page. If we added as path, so the path does not exist on client side and they need to
// configure to redirect to the relevant path, and this may cause the loss of query in the link.
// and we need add a route for race details 
if (raceid != 0){ 
// add fancybox css. We have bootstrap, fancybox css, and our css file. Boottrap and css can be embeded directly to clients side so no need to load dynamically
// as clients may have boottrap, and our css file can be changed on CDN
  const link = document.createElement('link');
  link.onload = () => { console.log('link loaded!'); };
  link.href = "https://cdn.jsdelivr.net/npm/@fancyapps/ui@4.0/dist/fancybox.css";
  link.rel  = "stylesheet";
  document.head.append(link);
  // later on, can query race id in db, take alias, and choose alias as path. But we normally missed this info at this moment
  // so safe to use path like it is now
  router.removeRoute('homepage');
  router.removeRoute('racedetails');
  //window.location.pathname -> a strong power, add dynamically it to route can help to navigate in different cases.
  router.addRoute({ path: window.location.pathname ?? '/', component: RaceImages, name:'embeded' });
  var queryinUrl = window.location.search;// window.location.search contains url query
  if (!queryinUrl){ // no query, perhaps, the first time loading page. Perhaps, query only exists if users paste a link after searching bib on browser 
    router.push({name:'embeded' , query:{raceid: raceid}});
  }
  else{ // if query exits either (localhost:5001?aaaa=2 - meaning the site has a param already or localhost:5001?raceid=2 or localhost:5001?raceid=2&bib=4)
    var routeQuery = {};
    var queryParamsInUrl = queryinUrl.split('?')[1]; // ?raceid=3&bib=4 -> split should come ['', 'raceid=3&bib=4'], so take [1]
    var keyvalues = queryParamsInUrl.split('&');     // ['raceid=3', 'bib=4']
    keyvalues.forEach((entry) =>{
      // note that although it's rare, clients may have their own params in query, so in theory, we should add all and push
        var [key, value] = entry.split('='); 
        routeQuery[key] = value;
    });

    if (!routeQuery['raceid'] ){ //localhost:5001?aaaa=2. If click a link in fb messenger, a param like ?fbid=42424234.35235 is added
      routeQuery['raceid'] = raceid
    }
    router.push({name:'embeded', query:routeQuery});
  }
}